find_package(BOOST 1.53)

# Instructs the MSVC toolset to use the precompiled header PRECOMPILED_HEADER
# for each source file given in the collection named by SOURCE_VARIABLE_NAME.
function(enable_precompiled_headers PRECOMPILED_HEADER SOURCE_VARIABLE_NAME)
  if(MSVC)
    set(files ${${SOURCE_VARIABLE_NAME}})

    # Generate precompiled header translation unit
    get_filename_component(pch_basename ${PRECOMPILED_HEADER} NAME_WE)
    set(pch_abs ${CMAKE_CURRENT_SOURCE_DIR}/${PRECOMPILED_HEADER})
    set(pch_unity ${CMAKE_CURRENT_BINARY_DIR}/${pch_basename}.cpp)
    FILE(WRITE ${pch_unity} "// Precompiled header unity generated by CMake\n")
    FILE(APPEND ${pch_unity} "#include <${pch_abs}>\n")
    set_source_files_properties(${pch_unity}  PROPERTIES COMPILE_FLAGS "/Yc\"${pch_abs}\"")

    # Update properties of source files to use the precompiled header.
    # Additionally, force the inclusion of the precompiled header at beginning of each source file.
    foreach(source_file ${files} )
      set_source_files_properties(
        ${source_file} 
        PROPERTIES COMPILE_FLAGS
        "/Yu\"${pch_abs}\" /FI\"${pch_abs}\""
      )
    endforeach(source_file)

    # Finally, update the source file collection to contain the precompiled header translation unit
    set(${SOURCE_VARIABLE_NAME} ${pch_unity} ${${SOURCE_VARIABLE_NAME}} PARENT_SCOPE)
  endif(MSVC)
endfunction(enable_precompiled_headers)

add_subdirectory(foobar2000_component_client)
add_subdirectory(helpers)
add_subdirectory(ATLHelpers)
add_subdirectory(shared)
add_subdirectory(SDK)
add_subdirectory(columns_ui-sdk)

find_package(BOOST 1.53)

set(DXSDK_INCLUDE_DIRS "$ENV{DXSDK_FEB10}include/")
set(DXSDK_LIBRARY_DIRS "$ENV{DXSDK_FEB10}lib/x86/")
set(TBB_INCLUDE_DIRS "$ENV{TBBROOT}include/")
set(TBB_LIBRARY_DIRS "$ENV{TBBROOT}build/windows_ia32_cl_v110_xp_debug/" "$ENV{TBBROOT}build/windows_ia32_cl_v110_xp_release/")

macro(deploy_component target dir)
	add_custom_command(TARGET ${target} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_directory
		$<TARGET_FILE_DIR:${target}>
		${USER_COMPONENTS_DIR}${dir}
#		COMMENT "Copying to output directory"
	)
endmacro()

set(FB2K_COMPONENTS "" CACHE STRING "Semicolon separated list of component names")

foreach(COMPONENT ${FB2K_COMPONENTS})
    add_subdirectory(${COMPONENT})
endforeach()